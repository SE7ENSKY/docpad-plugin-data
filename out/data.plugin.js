// Generated by CoffeeScript 1.9.1
(function() {
  var YAML, fs,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  fs = require('fs');

  YAML = require('yamljs');

  module.exports = function(BasePlugin) {
    var DataPlugin;
    return DataPlugin = (function(superClass) {
      extend(DataPlugin, superClass);

      function DataPlugin() {
        return DataPlugin.__super__.constructor.apply(this, arguments);
      }

      DataPlugin.prototype.name = 'data';

      DataPlugin.prototype.config = {
        dataPaths: ['data']
      };

      DataPlugin.prototype.renderBefore = function(opts) {
        var config, dataFile, dataFiles, dataPath, docpadConfig, fullFilePath, i, j, len, len1, m, ref, templateData;
        templateData = opts.templateData;
        docpadConfig = this.docpad.getConfig();
        config = docpadConfig.plugins.data;
        ref = config.dataPaths;
        for (i = 0, len = ref.length; i < len; i++) {
          dataPath = ref[i];
          dataFiles = fs.readdirSync(docpadConfig.srcPath + "/" + dataPath);
          for (j = 0, len1 = dataFiles.length; j < len1; j++) {
            dataFile = dataFiles[j];
            if (m = dataFile.match(/^([a-zA-Z][a-zA-Z0-9_]*)\.(json|yaml|yml|coffee|js)$/)) {
              fullFilePath = docpadConfig.srcPath + "/" + dataPath + "/" + dataFile;
              templateData[m[1]] = (function() {
                switch (m[2]) {
                  case 'json':
                    return JSON.parse(fs.readFileSync(fullFilePath, {
                      encoding: "utf8"
                    }));
                  case 'yaml':
                  case 'yml':
                    return YAML.parse(fs.readFileSync(fullFilePath, {
                      encoding: "utf8"
                    }));
                  case 'coffee':
                  case 'js':
                    delete require.cache[require.resolve(fullFilePath)];
                    return require(fullFilePath);
                }
              })();
            }
          }
        }
        return this;
      };

      return DataPlugin;

    })(BasePlugin);
  };

}).call(this);
